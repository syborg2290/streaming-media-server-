{"version":3,"sources":["Util.js","Dashboard.js","Profile.js","Flvplayer.js","Streams.js","App.js","index.js"],"names":["bytesToSize","bytes","Number","i","parseInt","Math","floor","log","round","pow","bytesToBand","bits","secondsToDhms","seconds","d","h","m","s","secondsToDhmsSimple","getOption","name","title","text","tooltip","trigger","grid","left","right","bottom","containLabel","xAxis","type","boundaryGap","data","yAxis","max","series","areaStyle","normal","Dashboard","count","lastInBytes","lastOtBytes","state","cpuOption","memOption","conOption","legend","netOption","axisPointer","animation","link","xAxisIndex","height","top","axisLine","onZero","show","gridIndex","position","inverse","yAxisIndex","fetch","credentials","then","response","json","_this","net","inbytes","outbytes","now","Date","axisData","toLocaleTimeString","replace","Object","objectSpread","shift","uptime","push","cpu","load","mem","free","totle","toFixed","clients","rtmp","http","ws","setState","catch","e","this","timer","setInterval","clearInterval","react_default","a","createElement","row","style","margin","col","span","padding","card","core_default","echarts","ref","option","width","marginTop","Component","columns","dataIndex","key","Profile","loading","osInfo","value","os","arch","platform","release","cpuInfo","num","model","memInfo","nodeInfo","nodejs","version","uptimeInfo","versionInfo","react","icon","paddingLeft","fontSize","table","dataSource","pagination","showHeader","Flvplayer","initFlv","$video","flvjs","isSupported","flvPlayer","createPlayer","props","config","attachMediaElement","play","unload","detachMediaElement","destroy","_this$props","className","assign","Streams","cookies","Cookies","streamsData","visible","password","render","record","href","onClick","openVideo","children","updatePass","target","set","path","maxAge","sign","hash","md5","create","ext","update","concat","app","hex","videoModal","modal","info","content","Flvplayer_Flvplayer","url","index","stream","publisher","subscribers","getTime","str","connectCreated","streamData","id","clientId","ip","ac","audio","codec","profile","freq","samplerate","chan","channels","vc","video","size","fps","time","length","get","input","Password","prefix","color","marginBottom","placeholder","onChange","bordered","small","Header","Sider","Content","Footer","App","fullTitle","shortTitle","collapsed","pathname","toggle","nextProps","nextContext","console","react_router_dom","layout","minHeight","collapsible","menu","theme","mode","defaultSelectedKeys","createBrowserHistory","location","Item","to","background","react_router","exact","component","textAlign","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.147e59b7.chunk.js","sourcesContent":["\nexport function bytesToSize(bytes) {\n  if (bytes === 0) return '0 Byte';\n  bytes = Number(bytes);\n  let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n};\n\nexport function bytesToBand(bytes) {\n  if (bytes === 0) return 0;\n  let bits = Number(bytes) * 8;\n  return Math.round(bits / Math.pow(1024, 2), 2);\n};\n\nexport function secondsToDhms(seconds) {\n  seconds = Number(seconds);\n  let d = Math.floor(seconds / (3600 * 24));\n  let h = Math.floor(seconds % (3600 * 24) / 3600);\n  let m = Math.floor(seconds % 3600 / 60);\n  let s = Math.floor(seconds % 60);\n\n  let dDisplay = d > 0 ? d + (d === 1 ? \" day, \" : \" days, \") : \"\";\n  let hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\";\n  let mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\";\n  let sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\n  return dDisplay + hDisplay + mDisplay + sDisplay;\n}\n\nexport function secondsToDhmsSimple(seconds) {\n  seconds = Number(seconds);\n  let d = Math.floor(seconds / (3600 * 24));\n  let h = Math.floor(seconds % (3600 * 24) / 3600);\n  let m = Math.floor(seconds % 3600 / 60);\n  let s = Math.floor(seconds % 60);\n\n  let dDisplay = d > 0 ? d + \"d,\" : \"\";\n  let hDisplay = h > 0 ? h + \"h,\" : \"\";\n  let mDisplay = m > 0 ? m + \"m,\" : \"\";\n  let sDisplay = s + \"s\";\n  return dDisplay + hDisplay + mDisplay + sDisplay;\n}","import React, { Component } from 'react';\nimport { Card, Row, Col } from 'antd';\nimport { bytesToBand } from \"./Util\";\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\n\nfunction getOption(name) {\n  return {\n    title: {\n      text: name\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    grid: {\n      left: '2%',\n      right: '4%',\n      bottom: '2%',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: []\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        max: 100,\n      }\n    ],\n    series: [\n      {\n        name: name,\n        type: 'line',\n        areaStyle: { normal: {} },\n        data: []\n      },\n    ]\n  };\n}\n\nfunction getConnOption() {\n  return {\n    title: {\n      text: \"Connections\"\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      data: ['Rtmp', 'Http', 'WebSocket']\n    },\n    grid: {\n      left: '2%',\n      right: '4%',\n      bottom: '2%',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: []\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      }\n    ],\n    series: [\n      {\n        name: \"Rtmp\",\n        type: 'line',\n        data: []\n      },\n      {\n        name: \"Http\",\n        type: 'line',\n        data: []\n      },\n      {\n        name: \"WebSocket\",\n        type: 'line',\n        data: []\n      },\n    ]\n  };\n}\n\nfunction getNetOption() {\n  return {\n    title: {\n      text: 'Network Bandwidth',\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        animation: false\n      }\n    },\n    axisPointer: {\n      link: { xAxisIndex: 'all' }\n    },\n    legend: {\n      data: ['Input', 'Output']\n    },\n    grid: [{\n      left: 50,\n      right: 50,\n      height: '35%'\n    }, {\n      left: 50,\n      right: 50,\n      top: '55%',\n      height: '35%'\n    }],\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        axisLine: { onZero: true },\n        data: [],\n        show: false,\n      },\n      {\n        gridIndex: 1,\n        type: 'category',\n        boundaryGap: false,\n        axisLine: { onZero: true },\n        data: [],\n        position: 'bottom'\n      }\n    ],\n    yAxis: [\n      {\n        name: 'Mbps',\n        type: 'value',\n      },\n      {\n        gridIndex: 1,\n        type: 'value',\n        inverse: true\n      }\n    ],\n    series: [\n      {\n        name: 'Input',\n        type: 'line',\n        data: []\n      },\n      {\n        name: 'Output',\n        type: 'line',\n        xAxisIndex: 1,\n        yAxisIndex: 1,\n        data: []\n      }\n    ]\n  };\n}\n\nclass Dashboard extends Component {\n  count = 0;\n  lastInBytes = 0;\n  lastOtBytes = 0;\n\n  state = {\n    cpuOption: getOption('CPU Usage'),\n    memOption: getOption('Memory Usage'),\n    conOption: getConnOption(),\n    netOption: getNetOption(),\n  };\n\n  componentDidMount() {\n    this.fetch();\n    this.timer = setInterval(this.fetch, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  fetch = () => {\n    fetch('/api/server', {\n      credentials: 'include'\n    }).then(function (response) {\n      return response.json();\n    }).then((data) => {\n      this.lastInBytes = this.lastInBytes || data.net.inbytes;\n      this.lastOtBytes = this.lastOtBytes || data.net.outbytes;\n\n      let now = new Date();\n      let axisData = now.toLocaleTimeString().replace(/^\\D*/, '');\n\n      let cpuOption = { ...this.state.cpuOption };\n      let memOption = { ...this.state.memOption };\n      let conOption = { ...this.state.conOption };\n      let netOption = { ...this.state.netOption };\n\n      if (this.count++ > 30) {\n        cpuOption.xAxis[0].data.shift();\n        cpuOption.series[0].data.shift();\n\n        memOption.xAxis[0].data.shift();\n        memOption.series[0].data.shift();\n\n        conOption.xAxis[0].data.shift();\n        conOption.series[0].data.shift();\n        conOption.series[1].data.shift();\n        conOption.series[2].data.shift();\n\n        netOption.xAxis[0].data.shift();\n        netOption.xAxis[1].data.shift();\n        netOption.series[0].data.shift();\n        netOption.series[1].data.shift();\n      }\n\n      cpuOption.uptime = now;\n      cpuOption.xAxis[0].data.push(axisData);\n      cpuOption.series[0].data.push(data.cpu.load);\n\n      memOption.uptime = now;\n      memOption.xAxis[0].data.push(axisData);\n      memOption.series[0].data.push((100 - 100 * data.mem.free / data.mem.totle).toFixed(2));\n\n      conOption.uptime = now;\n      conOption.title.text = \"Connections \" + (data.clients.rtmp + data.clients.http + data.clients.ws);\n      conOption.xAxis[0].data.push(axisData);\n      conOption.series[0].data.push(data.clients.rtmp);\n      conOption.series[1].data.push(data.clients.http);\n      conOption.series[2].data.push(data.clients.ws);\n\n      netOption.uptime = now;\n      netOption.xAxis[0].data.push(axisData);\n      netOption.xAxis[1].data.push(axisData);\n      netOption.series[0].data.push(bytesToBand((data.net.inbytes - this.lastInBytes) / 2));\n      netOption.series[1].data.push(bytesToBand((data.net.outbytes - this.lastOtBytes) / 2));\n      this.lastInBytes = data.net.inbytes;\n      this.lastOtBytes = data.net.outbytes;\n      this.setState({ cpuOption, memOption, conOption, netOption });\n    }).catch(e => {\n    });\n  }\n\n  render() {\n\n    return (\n      <Row style={{ margin: \"0 -12px\" }}>\n        <Col span={12} style={{ padding: \"0 12px\" }}>\n          <Card>\n            <ReactEchartsCore\n              echarts={echarts}\n              ref='echarts_react'\n              option={this.state.conOption}\n              style={{ height: '348px', width: '100%' }}\n            />\n          </Card>\n\n        </Col>\n        <Col span={12} style={{ padding: \"0 12px\" }}>\n          <Card>\n            <ReactEchartsCore\n              echarts={echarts}\n              ref='echarts_react'\n              option={this.state.netOption}\n              style={{ height: '348px', width: '100%' }}\n            />\n          </Card>\n        </Col>\n\n        <Col span={12} style={{ padding: \"0 12px\", marginTop: \"16px\" }}>\n          <Card>\n            <ReactEchartsCore\n              echarts={echarts}\n              ref='echarts_react'\n              option={this.state.cpuOption}\n              style={{ height: '300px', width: '100%' }}\n            />\n          </Card>\n        </Col>\n        <Col span={12} style={{ padding: \"0 12px\", marginTop: \"16px\" }}>\n          <Card>\n            <ReactEchartsCore\n              echarts={echarts}\n              ref='echarts_react'\n              option={this.state.memOption}\n              style={{ height: '300px', width: '100%' }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default Dashboard;\n","import React, { Component, Fragment } from 'react';\nimport { Card, Icon, Table } from \"antd\";\nimport { bytesToSize, secondsToDhms } from \"./Util\";\n\nconst columns = [{\n    dataIndex: 'name',\n    key: 'name',\n    width: 200\n}, {\n    dataIndex: 'value',\n    key: 'value',\n}];\n\nclass Profile extends Component {\n\n    state = {\n        data: [],\n        loading: false,\n    };\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch = () => {\n        this.setState({ loading: true });\n        fetch('/api/server', {\n            credentials: 'include'\n        }).then(function (response) {\n            return response.json();\n        }).then((data) => {\n            // Read total count from server\n            let osInfo = { key: 0, name: 'OS', value: data.os.arch + \"_\" + data.os.platform + \"_\" + data.os.release };\n            let cpuInfo = { key: 1, name: \"CPU\", value: data.cpu.num + \" x \" + data.cpu.model };\n            let memInfo = { key: 2, name: \"Memory\", value: bytesToSize(data.mem.totle) };\n            let nodeInfo = { key: 3, name: \"Node.js\", value: data.nodejs.version };\n            let uptimeInfo = { key: 4, name: \"Uptime\", value: secondsToDhms(data.nodejs.uptime) };\n            let versionInfo = { key: 5, name: \"Version\", value: data.version };\n            this.setState({\n                loading: false,\n                data: [osInfo, cpuInfo, memInfo, nodeInfo, uptimeInfo, versionInfo],\n            });\n        }).catch(e => {\n            this.setState({\n                loading: false,\n            });\n        });\n    }\n\n\n    render() {\n        return (\n            <Card title={<Fragment>\n                <Icon type=\"hdd\" />\n                <span style={{ paddingLeft: \"12px\", fontSize: \"16px\" }}>Server Info</span>\n            </Fragment>}>\n\n                <Table\n                    dataSource={this.state.data}\n                    columns={columns}\n                    loading={this.state.loading}\n                    pagination={false}\n                    showHeader={false} />\n            </Card>\n        );\n    }\n};\n\nexport default Profile;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport flvjs from 'flv.js';\n\n/**\n * react component wrap flv.js\n */\nexport default class Flvplayer extends Component {\n\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    /**\n     * media URL, can be starts with 'https(s)' or 'ws(s)' (WebSocket)\n     */\n    url: PropTypes.string,\n    /**\n     * media type, 'flv' or 'mp4'\n     */\n    type: PropTypes.oneOf(['flv', 'mp4']).isRequired,\n    /**\n     * whether the data source is a **live stream**\n     */\n    isLive: PropTypes.bool,\n    /**\n     * whether to enable CORS for http fetching\n     */\n    cors: PropTypes.bool,\n    /**\n     * whether to do http fetching with cookies\n     */\n    withCredentials: PropTypes.bool,\n    /**\n     * whether the stream has audio track\n     */\n    hasAudio: PropTypes.bool,\n    /**\n     * whether the stream has video track\n     */\n    hasVideo: PropTypes.bool,\n    /**\n     * total media duration, in milliseconds\n     */\n    duration: PropTypes.bool,\n    /**\n     * total file size of media file, in bytes\n     */\n    filesize: PropTypes.number,\n    /**\n     * Optional field for multipart playback, see MediaSegment\n     */\n    segments: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * indicates segment duration in milliseconds\n       */\n      duration: PropTypes.number.isRequired,\n      /**\n       * indicates segment file size in bytes\n       */\n      filesize: PropTypes.number,\n      /**\n       * indicates segment file URL\n       */\n      url: PropTypes.string.isRequired,\n    })),\n    /**\n     * @see https://github.com/Bilibili/flv.js/blob/master/docs/api.md#config\n     */\n    config: PropTypes.object,\n  }\n\n  initFlv = ($video) => {\n    if ($video) {\n      if (flvjs.isSupported()) {\n        let flvPlayer = flvjs.createPlayer({ ...this.props }, this.props.config);\n        flvPlayer.attachMediaElement($video);\n        flvPlayer.load();\n        flvPlayer.play();\n        this.flvPlayer = flvPlayer;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.flvPlayer) {\n      this.flvPlayer.unload();\n      this.flvPlayer.detachMediaElement();\n      this.flvPlayer.destroy();\n    }\n  }\n\n  render() {\n    const { className, style } = this.props;\n    return (\n      <video\n        className={className}\n        style={Object.assign({\n          width: '100%',\n        }, style)}\n        ref={this.initFlv}\n      />\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Icon, Card, Table, Modal, Input } from \"antd\";\nimport { secondsToDhmsSimple } from \"./Util\";\nimport Flvplayer from \"./Flvplayer\";\nimport Cookies from 'universal-cookie';\nimport md5 from 'js-md5';\n\nclass Streams extends Component {\n  cookies = new Cookies();\n\n  state = {\n    streamsData: [],\n    loading: false,\n    visible: false,\n    password: ''\n  };\n\n  columns = [{\n    title: 'App',\n    dataIndex: 'app',\n    key: 'app',\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (name, record) => {\n      return <a href=\"##\" onClick={() => this.openVideo(record)}>{name}</a>;\n    }\n  }, {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n  }, {\n    title: 'IP',\n    dataIndex: 'ip',\n    key: 'ip',\n  }, {\n    title: 'Audio',\n    children: [{\n      title: 'codec',\n      dataIndex: 'ac',\n      key: 'ac',\n    }, {\n      title: 'freq',\n      dataIndex: 'freq',\n      key: 'freq',\n    }, {\n      title: 'chan',\n      dataIndex: 'chan',\n      key: 'chan',\n    },\n    ]\n  }, {\n    title: 'Video',\n    children: [{\n      title: 'codec',\n      dataIndex: 'vc',\n      key: 'vc',\n    }, {\n      title: 'size',\n      dataIndex: 'size',\n      key: 'size',\n    }, {\n      title: 'fps',\n      dataIndex: 'fps',\n      key: 'fps',\n    },]\n  },\n  {\n    title: 'Time',\n    dataIndex: 'time',\n    key: 'time',\n  }, {\n    title: 'Clients',\n    dataIndex: 'clients',\n    key: 'clients',\n  }];\n\n  componentDidMount() {\n    this.setState({\n      password: this.cookies.get('pass')\n    })\n    this.fetch();\n  }\n\n  updatePass = (e) => {\n    let password = e.target.value;\n    this.setState({\n      password\n    });\n    this.cookies.set('pass', password, { path: '/', maxAge: 31536000 })\n  }\n\n  openVideo = (record) => {\n    let sign = '';\n    if (this.state.password) {\n      let hash = md5.create();\n      let ext = Date.now() + 30000;\n      hash.update(`/${record.app}/${record.name}-${ext}-${this.state.password}`);\n      let key = hash.hex();\n      sign = `?sign=${ext}-${key}`;\n    }\n    this.videoModal = Modal.info({\n      icon: null,\n      title: \"Video Player\",\n      width: 640,\n      height: 480,\n      content: <Flvplayer url={`/${record.app}/${record.name}.flv${sign}`} type=\"flv\" />,\n    });\n  }\n\n  fetch = () => {\n    this.setState({ loading: true });\n    fetch('/api/streams', {\n      credentials: 'include'\n    }).then(function (response) {\n      return response.json();\n    }).then((data) => {\n      // Read total count from server\n      let streamsData = [];\n      let index = 0;\n      for (let app in data) {\n        for (let name in data[app]) {\n          let stream = data[app][name].publisher;\n          let clients = data[app][name].subscribers;\n          if (stream) {\n            let now = new Date().getTime() / 1000;\n            let str = new Date(stream.connectCreated).getTime() / 1000;\n            let streamData = {\n              key: index++,\n              app,\n              name,\n              id: stream.clientId,\n              ip: stream.ip,\n              ac: stream.audio ? stream.audio.codec + \" \" + stream.audio.profile : \"\",\n              freq: stream.audio ? stream.audio.samplerate : \"\",\n              chan: stream.audio ? stream.audio.channels : \"\",\n              vc: stream.video ? stream.video.codec + \" \" + stream.video.profile : \"\",\n              size: stream.video ? stream.video.width + \"x\" + stream.video.height : \"\",\n              fps: stream.video ? Math.floor(stream.video.fps) : \"\",\n              time: secondsToDhmsSimple(now - str),\n              clients: clients.length\n            };\n            streamsData.push(streamData);\n          }\n        }\n      }\n      this.setState({\n        loading: false,\n        streamsData,\n      });\n    }).catch(e => {\n      this.setState({\n        loading: false,\n      });\n    });\n  }\n\n\n  render() {\n    return (\n      <Card>\n        <Input.Password\n          size=\"large\"\n          prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n          style={{ marginBottom: \"16px\" }}\n          placeholder=\"input password\"\n          onChange={this.updatePass}\n          value={this.state.password} />\n        <Table\n          dataSource={this.state.streamsData}\n          columns={this.columns}\n          loading={this.state.loading}\n          bordered\n          small\n          pagination={false}\n        />\n      </Card>\n    );\n  }\n};\n\nexport default Streams;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { Icon, Layout, Menu } from 'antd';\nimport { createBrowserHistory } from 'history';\nimport Dashboard from \"./Dashboard\";\nimport Profile from \"./Profile\";\nimport Streams from \"./Streams\";\n\nimport \"./App.css\"\n\n\nconst { Header, Sider, Content, Footer } = Layout;\n\nclass App extends Component {\n\n    fullTitle = \"NodeMediaServer\";\n\n    shortTitle = \"NMS\";\n\n    state = {\n        collapsed: false,\n        title: this.fullTitle,\n        pathname: \"/\"\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n            title: this.state.collapsed ? this.fullTitle : this.shortTitle,\n        });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(nextProps, nextContext);\n    }\n\n    render() {\n        return (\n            <Router>\n                <Layout style={{ minHeight: \"100vh\" }}>\n                    <Sider\n                        width={256}\n                        trigger={null}\n                        collapsible\n                        collapsed={this.state.collapsed}>\n\n                        <div className=\"logo\"><h1>{this.state.title}</h1></div>\n\n                        <Menu theme=\"dark\" mode=\"inline\"\n                            defaultSelectedKeys={[createBrowserHistory().location.pathname]}\n                        >\n                            <Menu.Item key=\"/admin/\">\n                                <Link to=\"/admin/\">\n                                    <Icon type=\"dashboard\" />\n                                    <span>Dashboard</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"/admin/streams\">\n                                <Link to=\"/admin/streams\">\n                                    <Icon type=\"video-camera\" />\n                                    <span>Streams</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"/admin/profile\">\n                                <Link to=\"/admin/profile\">\n                                    <Icon type=\"profile\" />\n                                    <span>Profile</span>\n                                </Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0 }}>\n                            <Icon\n                                className=\"trigger\"\n                                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                onClick={this.toggle}\n                            />\n                        </Header>\n                        <Content style={{\n                            margin: '24px 16px', minHeight: 280,\n                        }}>\n                            <Route exact path=\"/admin\" component={Dashboard} />\n                            <Route path=\"/admin/streams\" component={Streams} />\n                            <Route path=\"/admin/profile\" component={Profile} />\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                            Node-Media-Server\n                        </Footer>\n                    </Layout>\n                </Layout>\n\n\n            </Router>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}